//
//  DetailsWorker.swift
//  AppWeather
//
//  Created by Johnson-Riche Louis on 28/01/2020.
//  Copyright (c) 2020 Johnson-Richie Louis. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsModel {
	func fetch(cityId: Int, completionHandler: @escaping (Result<Detailnfo, Error>) -> Void)
}

class DetailsService {

	// MARK: - Property

	let network: NetworkProtocol

	// MARK: - Lifecycle

	init(network: NetworkProtocol) {
		self.network = network
	}
}

// MARK: - DetailsWorkerProtocol

extension DetailsService: DetailsModel {

	func fetch(cityId: Int, completionHandler: @escaping (Result<Detailnfo, Error>) -> Void) {
		let url = "https://api.openweathermap.org/data/2.5/weather"
		let parameters = ["id": "\(cityId)",
			"appid": "5c9a5519f58bd542743e739b83ad4c2f",
			"lang": Locale.current.languageCode ?? "en",
			"units": "metric"]
		let ressource = NetworkResource(url: url, parameters: parameters)
		network.request(resource: ressource, type: DetailsJSON.self) {
			switch $0 {
			case .success(let decodable):
				guard let detailsJSON = decodable as? DetailsJSON else {
					return
				}
				let detailInfo = Detailnfo(name: detailsJSON.name,
										   description: detailsJSON.weather.first?.description,
										   icon: detailsJSON.weather.first?.icon,
										   temperature: detailsJSON.main.temperature,
										   minTemperature: detailsJSON.main.minTemperature,
										   maxTemperature: detailsJSON.main.maxTemperature,
										   temperatureFeels: detailsJSON.main.feelsLike,
										   pressure: detailsJSON.main.pressure,
										   humidity: detailsJSON.main.humidity,
										   windSpeed: detailsJSON.wind.speed)
				completionHandler(.success(detailInfo))
			case .failure(let error):
				completionHandler(.failure(error))
			}
		}
	}
}
